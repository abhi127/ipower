{"version":3,"file":"src_app_account_account_module_ts.js","mappings":"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","sources":["./src/app/account/account-routing.module.ts","./src/app/account/account.module.ts","./src/app/account/auth/auth-routing.ts","./src/app/account/auth/auth.module.ts","./src/app/account/auth/login/login.component.ts","./src/app/account/auth/login/login.component.html","./src/app/account/auth/passwordreset/passwordreset.component.ts","./src/app/account/auth/passwordreset/passwordreset.component.html","./src/app/account/auth/recoverpwd2/recoverpwd2.component.ts","./src/app/account/auth/recoverpwd2/recoverpwd2.component.html","./src/app/account/auth/register2/register2.component.ts","./src/app/account/auth/register2/register2.component.html","./src/app/account/auth/signup/signup.component.ts","./src/app/account/auth/signup/signup.component.html","./src/app/core/services/user.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nconst routes: Routes = [\r\n  { path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule) }, \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccountRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { AuthModule } from './auth/auth.module';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    AccountRoutingModule,\r\n    AuthModule\r\n  ]\r\n})\r\nexport class AccountModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { Login2Component } from './login2/login2.component';\r\n\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { PasswordresetComponent } from './passwordreset/passwordreset.component';\r\nimport { Register2Component } from './register2/register2.component';\r\nimport { Recoverpwd2Component } from './recoverpwd2/recoverpwd2.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'login',\r\n        component: LoginComponent\r\n    },\r\n    {\r\n        path: 'signup',\r\n        component: SignupComponent\r\n    },\r\n    {\r\n        path: 'signup-2',\r\n        component: Register2Component\r\n    },\r\n    {\r\n        path: 'reset-password',\r\n        component: PasswordresetComponent\r\n    },\r\n    {\r\n        path: 'recoverpwd-2',\r\n        component: Recoverpwd2Component\r\n    },\r\n    {\r\n        path: 'login-2',\r\n        component: Login2Component\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CarouselModule } from 'ngx-owl-carousel-o';\r\nimport { UIModule } from '../../shared/ui/ui.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { Login2Component } from './login2/login2.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { Register2Component } from './register2/register2.component';\r\nimport { Recoverpwd2Component } from './recoverpwd2/recoverpwd2.component';\r\nimport { AuthRoutingModule } from './auth-routing';\r\nimport { PasswordresetComponent } from './passwordreset/passwordreset.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, Login2Component, SignupComponent, PasswordresetComponent, Register2Component, Recoverpwd2Component],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    NgbAlertModule,\r\n    UIModule,\r\n    AuthRoutingModule,\r\n    CarouselModule,\r\n    RouterModule,\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\n\r\nimport { AuthenticationService } from '../../../core/services/auth.service';\r\nimport { AuthfakeauthenticationService } from '../../../core/services/authfake.service';\r\n\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\n\r\n/**\r\n * Login component\r\n */\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: UntypedFormGroup;\r\n  submitted = false;\r\n  error = '';\r\n  returnUrl: string;\r\n\r\n  // set the currenr year\r\n  year: number = new Date().getFullYear();\r\n\r\n  // tslint:disable-next-line: max-line-length\r\n  constructor(private formBuilder: UntypedFormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService,\r\n    private authFackservice: AuthfakeauthenticationService) { }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      email: ['admin@themesbrand.com', [Validators.required, Validators.email]],\r\n      password: ['123456', [Validators.required]],\r\n    });\r\n\r\n    // reset login status\r\n    // this.authenticationService.logout();\r\n    // get return url from route parameters or default to '/'\r\n    // tslint:disable-next-line: no-string-literal\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.loginForm.controls; }\r\n\r\n  /**\r\n   * Form submit\r\n   */\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    } else {\r\n      if (environment.defaultauth === 'firebase') {\r\n        this.authenticationService.login(this.f.email.value, this.f.password.value).then((res: any) => {\r\n          this.router.navigate(['/dashboard']);\r\n        })\r\n          .catch(error => {\r\n            this.error = error ? error : '';\r\n          });\r\n      } else {\r\n        this.authFackservice.login(this.f.email.value, this.f.password.value)\r\n          .pipe(first())\r\n          .subscribe(\r\n            data => {\r\n              this.router.navigate(['/home']);\r\n            },\r\n            error => {\r\n              this.error = error ? error : '';\r\n            });\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div class=\"account-pages my-5 pt-sm-5\">\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\r\n        <div class=\"card overflow-hidden\">\r\n          <div class=\"bg-soft bg-primary\">\r\n            <div class=\"row\">\r\n              <div class=\"col-7\">\r\n                <div class=\"text-primary p-4\">\r\n                  <h5 class=\"text-primary\">Welcome Back !</h5>\r\n                  <p>Sign in to continue to Skote.</p>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-5 align-self-end\">\r\n                <img src=\"assets/images/profile-img.png\" alt=\"\" class=\"img-fluid\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-body pt-0\">\r\n            <div>\r\n              <a routerLink=\"/\">\r\n                <div class=\"avatar-md profile-user-wid mb-4\">\r\n                  <span class=\"avatar-title rounded-circle bg-light\">\r\n                    <img src=\"assets/images/logo.svg\" alt=\"\" class=\"rounded-circle\" height=\"34\">\r\n                  </span>\r\n                </div>\r\n              </a>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              <form class=\"form-horizontal\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n                <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\r\n\r\n                <div class=\"mb-3\">\r\n                  <label for=\"email\">Email</label>\r\n                  <input type=\"email\" formControlName=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Email\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n                  <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                    <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"mb-3\">\r\n                  <label for=\"password\">Password</label>\r\n                  <div class=\"input-group auth-pass-inputgroup\">\r\n                    <input type=\"password\" class=\"form-control\" formControlName=\"password\" placeholder=\"Enter password\"\r\n                      [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" aria-label=\"Password\"\r\n                      aria-describedby=\"password-addon\">\r\n\r\n                    <button class=\"btn btn-light ms-0\" type=\"button\" id=\"password-addon\"><i\r\n                        class=\"mdi mdi-eye-outline\"></i></button>\r\n                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                      <span *ngIf=\"f.password.errors.required\">Password is required</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"form-check\">\r\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"remember-check\">\r\n                  <label class=\"form-check-label\" for=\"remember-check\">\r\n                      Remember me\r\n                  </label>\r\n              </div>\r\n\r\n                <div class=\"mt-3 d-grid\">\r\n                  <button class=\"btn btn-primary\" type=\"submit\">Log In</button>\r\n                </div>\r\n                <div class=\"mt-4 text-center\">\r\n                  <h5 class=\"font-size-14 mb-3\">Sign in with</h5>\r\n\r\n                  <ul class=\"list-inline\">\r\n                    <li class=\"list-inline-item\">\r\n                      <a href=\"javascript::void()\" class=\"social-list-item bg-primary text-white border-primary\">\r\n                        <i class=\"mdi mdi-facebook\"></i>\r\n                      </a>\r\n                    </li>\r\n                    <li class=\"list-inline-item\">\r\n                      <a href=\"javascript::void()\" class=\"social-list-item bg-info text-white border-info\">\r\n                        <i class=\"mdi mdi-twitter\"></i>\r\n                      </a>\r\n                    </li>\r\n                    <li class=\"list-inline-item\">\r\n                      <a href=\"javascript::void()\" class=\"social-list-item bg-danger text-white border-danger\">\r\n                        <i class=\"mdi mdi-google\"></i>\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div class=\"mt-4 text-center\">\r\n                  <a routerLink=\"/account/reset-password\" class=\"text-muted\"><i class=\"mdi mdi-lock mr-1\"></i> Forgot\r\n                    your\r\n                    password?</a>\r\n                </div>\r\n              </form>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"mt-5 text-center\">\r\n          <p>Don't have an account ? <a routerLink=\"/account/signup\" class=\"fw-medium text-primary\"> Signup\r\n              now\r\n            </a> </p>\r\n          <p>© {{year}} Skote. Crafted with <i class=\"mdi mdi-heart text-danger\"></i> by Themesbrand</p>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- end container -->\r\n</div>\r\n<!-- end page -->","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../../../core/services/auth.service';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-passwordreset',\r\n  templateUrl: './passwordreset.component.html',\r\n  styleUrls: ['./passwordreset.component.scss']\r\n})\r\n\r\n/**\r\n * Reset-password component\r\n */\r\nexport class PasswordresetComponent implements OnInit, AfterViewInit {\r\n\r\n  resetForm: UntypedFormGroup;\r\n  submitted = false;\r\n  error = '';\r\n  success = '';\r\n  loading = false;\r\n\r\n  // set the currenr year\r\n  year: number = new Date().getFullYear();\r\n\r\n  // tslint:disable-next-line: max-line-length\r\n  constructor(private formBuilder: UntypedFormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.resetForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.resetForm.controls; }\r\n\r\n  /**\r\n   * On submit form\r\n   */\r\n  onSubmit() {\r\n    this.success = '';\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.resetForm.invalid) {\r\n      return;\r\n    }\r\n    if (environment.defaultauth === 'firebase') {\r\n      this.authenticationService.resetPassword(this.f.email.value)\r\n        .catch(error => {\r\n          this.error = error ? error : '';\r\n        });\r\n    }\r\n  }\r\n}\r\n","<div class=\"account-pages my-5 pt-sm-5\">\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\r\n        <div class=\"card overflow-hidden\">\r\n          <div class=\"bg-soft bg-primary\">\r\n            <div class=\"row\">\r\n              <div class=\"col-7\">\r\n                <div class=\"text-primary p-4\">\r\n                  <h5 class=\"text-primary\"> Reset Password</h5>\r\n                  <p>Re-Password with Skote.</p>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-5 align-self-end\">\r\n                <img src=\"assets/images/profile-img.png\" alt=\"\" class=\"img-fluid\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-body pt-0\">\r\n            <div>\r\n              <a routerLink=\"/\">\r\n                <div class=\"avatar-md profile-user-wid mb-4\">\r\n                  <span class=\"avatar-title rounded-circle bg-light\">\r\n                    <img src=\"assets/images/logo.svg\" alt=\"\" class=\"rounded-circle\" height=\"34\">\r\n                  </span>\r\n                </div>\r\n              </a>\r\n            </div>\r\n\r\n            <form class=\"needs-validation\" name=\"resetForm\" [formGroup]=\"resetForm\" (ngSubmit)=\"onSubmit()\" novalidate>\r\n\r\n              <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\r\n\r\n              <div class=\"mb-3\">\r\n                <label for=\"email\">Email</label>\r\n\r\n                <input type=\"email\" formControlName=\"email\" class=\"form-control\"\r\n                  [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"email\" placeholder=\"Email\" />\r\n\r\n                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                  <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"text-end\">\r\n                <button class=\"btn btn-primary w-md\" type=\"submit\">Reset</button>\r\n              </div>\r\n            </form>\r\n\r\n          </div> <!-- end card-body-->\r\n        </div>\r\n        <!-- end card -->\r\n        <div class=\"mt-5 text-center\">\r\n          <p>Remember It ? <a routerLink=\"/account/login\" class=\"fw-medium text-primary\"> Sign In here</a> </p>\r\n          <p>© {{year}} Skote. Crafted with <i class=\"mdi mdi-heart text-danger\"></i> by Themesbrand</p>\r\n        </div>\r\n\r\n      </div> <!-- end col -->\r\n    </div>\r\n    <!-- end row -->\r\n  </div>\r\n  <!-- end container -->\r\n</div>\r\n<!-- end page -->","import { Component, OnInit } from '@angular/core';\r\nimport { OwlOptions } from 'ngx-owl-carousel-o';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../../../core/services/auth.service';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-recoverpwd2',\r\n  templateUrl: './recoverpwd2.component.html',\r\n  styleUrls: ['./recoverpwd2.component.scss']\r\n})\r\nexport class Recoverpwd2Component implements OnInit {\r\n\r\n   // set the currenr year\r\n   year: number = new Date().getFullYear();\r\n\r\n   resetForm: UntypedFormGroup;\r\n   submitted = false;\r\n   error = '';\r\n   success = '';\r\n   loading = false;\r\n\r\n   constructor(private formBuilder: UntypedFormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.resetForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n    });\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.resetForm.controls; }\r\n\r\n  /**\r\n   * On submit form\r\n   */\r\n  onSubmit() {\r\n    this.success = '';\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.resetForm.invalid) {\r\n      return;\r\n    }\r\n    if (environment.defaultauth === 'firebase') {\r\n      this.authenticationService.resetPassword(this.f.email.value)\r\n        .catch(error => {\r\n          this.error = error ? error : '';\r\n        });\r\n    }\r\n  }\r\n\r\n  carouselOption: OwlOptions = {\r\n    items: 1,\r\n    loop: false,\r\n    margin: 0,\r\n    nav: false,\r\n    dots: true,\r\n    responsive: {\r\n      680: {\r\n        items: 1\r\n      },\r\n    }\r\n  }\r\n}\r\n","<div>\r\n    <div class=\"container-fluid p-0\">\r\n        <div class=\"row g-0\">\r\n\r\n            <div class=\"col-xl-9\">\r\n                <div class=\"auth-full-bg pt-lg-5 p-4\">\r\n                    <div class=\"w-100\">\r\n                        <div class=\"bg-overlay\"></div>\r\n                        <div class=\"d-flex h-100 flex-column\">\r\n                            <div class=\"p-4 mt-auto\">\r\n                                <div class=\"row justify-content-center\">\r\n                                    <div class=\"col-lg-7\">\r\n                                        <div class=\"text-center\">\r\n\r\n                                            <h4 class=\"mb-3\"><i\r\n                                                    class=\"bx bxs-quote-alt-left text-primary h1 align-middle me-3\"></i><span\r\n                                                    class=\"text-primary\">5k</span>+ Satisfied clients</h4>\r\n\r\n                                            <div dir=\"ltr\">\r\n                                                <owl-carousel-o class=\"owl-theme auth-review-carousel\"\r\n                                                    [options]=\"carouselOption\">\r\n                                                    <ng-template carouselSlide>\r\n                                                        <div class=\"item\">\r\n                                                            <div class=\"py-3\">\r\n                                                                <p class=\"font-size-16 mb-4\">\" Fantastic theme with a\r\n                                                                    ton of\r\n                                                                    options. If you just want the HTML to integrate with\r\n                                                                    your project, then this is the package. You can find\r\n                                                                    the\r\n                                                                    files in the 'dist' folder...no need to install git\r\n                                                                    and\r\n                                                                    all the other stuff the documentation talks about. \"\r\n                                                                </p>\r\n\r\n                                                                <div>\r\n                                                                    <h4 class=\"font-size-16 text-primary\">Abs1981</h4>\r\n                                                                    <p class=\"font-size-14 mb-0\">- Skote User</p>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </ng-template>\r\n                                                    <ng-template carouselSlide>\r\n                                                        <div class=\"item\">\r\n                                                            <div class=\"py-3\">\r\n                                                                <p class=\"font-size-16 mb-4\">\" If Every Vendor on Envato\r\n                                                                    are\r\n                                                                    as supportive as Themesbrand, Development with be a\r\n                                                                    nice\r\n                                                                    experience. You guys are Wonderful. Keep us the good\r\n                                                                    work. \"</p>\r\n\r\n                                                                <div>\r\n                                                                    <h4 class=\"font-size-16 text-primary\">nezerious</h4>\r\n                                                                    <p class=\"font-size-14 mb-0\">- Skote User</p>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </ng-template>\r\n                                                </owl-carousel-o>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- end col -->\r\n\r\n            <div class=\"col-xl-3\">\r\n                <div class=\"auth-full-page-content p-md-5 p-4\">\r\n                    <div class=\"w-100\">\r\n\r\n                        <div class=\"d-flex flex-column h-100\">\r\n                            <div class=\"mb-4 mb-md-5\">\r\n                                <a routerLink=\"/\" class=\"d-block auth-logo\">\r\n                                    <img src=\"assets/images/logo-dark.png\" alt=\"\" height=\"18\" class=\"auth-logo-dark\">\r\n                                    <img src=\"assets/images/logo-light.png\" alt=\"\" height=\"18\" class=\"auth-logo-light\">\r\n                                </a>\r\n                            </div>\r\n                            <div class=\"my-auto\">\r\n                                <div>\r\n                                    <h5 class=\"text-primary\"> Reset Password</h5>\r\n                                    <p class=\"text-muted\">Re-Password with Skote.</p>\r\n                                </div>\r\n\r\n                                <div class=\"mt-4\">\r\n                                    <div class=\"alert alert-success text-center mb-4\" role=\"alert\">\r\n                                        Enter your Email and instructions will be sent to you!\r\n                                    </div>\r\n                                    <form [formGroup]=\"resetForm\" (ngSubmit)=\"onSubmit()\"\r\n                                    >\r\n                                    <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\r\n                                        <div class=\"mb-3\">\r\n                                            <label for=\"useremail\">Email</label>\r\n                                            <input type=\"email\" formControlName=\"email\" \r\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" class=\"form-control\" id=\"useremail\"\r\n                                                placeholder=\"Enter email\">\r\n                                                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                                                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                                                    <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n                                                  </div>\r\n                                        </div>\r\n\r\n                                        <div class=\"text-end\">\r\n                                                <button class=\"btn btn-primary w-md\"\r\n                                                    type=\"submit\">Reset</button>\r\n                                            </div>\r\n\r\n                                    </form>\r\n                                    <div class=\"mt-5 text-center\">\r\n                                        <p>Remember It ? <a routerLink=\"/account/login-2\"\r\n                                                class=\"fw-medium text-primary\"> Sign In here</a> </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"mt-4 mt-md-5 text-center\">\r\n                                <p class=\"mb-0\">©{{year}} Skote. Crafted with <i class=\"mdi mdi-heart text-danger\"></i>\r\n                                    by Themesbrand</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- end col -->\r\n        </div>\r\n        <!-- end row -->\r\n    </div>\r\n    <!-- end container-fluid -->\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { OwlOptions } from 'ngx-owl-carousel-o';\r\nimport { AuthenticationService } from '../../../core/services/auth.service';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { first } from 'rxjs/operators';\r\nimport { UserProfileService } from '../../../core/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-register2',\r\n  templateUrl: './register2.component.html',\r\n  styleUrls: ['./register2.component.scss']\r\n})\r\nexport class Register2Component implements OnInit {\r\n\r\n  signupForm: UntypedFormGroup;\r\n  submitted = false;\r\n  error = '';\r\n  successmsg = false;\r\n\r\n  constructor(private formBuilder: UntypedFormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService,\r\n    private userService: UserProfileService) { }\r\n  // set the currenr year\r\n  year: number = new Date().getFullYear();\r\n\r\n  ngOnInit(): void {\r\n    document.body.classList.add('auth-body-bg')\r\n\r\n    this.signupForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.signupForm.controls; }\r\n\r\n  carouselOption: OwlOptions = {\r\n    items: 1,\r\n    loop: false,\r\n    margin: 0,\r\n    nav: false,\r\n    dots: true,\r\n    responsive: {\r\n      680: {\r\n        items: 1\r\n      },\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On submit form\r\n   */\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.signupForm.invalid) {\r\n      return;\r\n    } else {\r\n      if (environment.defaultauth === 'firebase') {\r\n        this.authenticationService.register(this.f.email.value, this.f.password.value).then((res: any) => {\r\n          this.successmsg = true;\r\n          if (this.successmsg) {\r\n            this.router.navigate(['/dashboard']);\r\n          }\r\n        })\r\n          .catch(error => {\r\n            this.error = error ? error : '';\r\n          });\r\n      } else {\r\n        this.userService.register(this.signupForm.value)\r\n          .pipe(first())\r\n          .subscribe(\r\n            data => {\r\n              this.successmsg = true;\r\n              if (this.successmsg) {\r\n                this.router.navigate(['/account/login']);\r\n              }\r\n            },\r\n            error => {\r\n              this.error = error ? error : '';\r\n            });\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div class=\"container-fluid p-0\">\r\n    <div class=\"row g-0\">\r\n\r\n        <div class=\"col-xl-9\">\r\n            <div class=\"auth-full-bg pt-lg-5 p-4\">\r\n                <div class=\"w-100\">\r\n                    <div class=\"bg-overlay\"></div>\r\n                    <div class=\"d-flex h-100 flex-column\">\r\n\r\n                        <div class=\"p-4 mt-auto\">\r\n                            <div class=\"row justify-content-center\">\r\n                                <div class=\"col-lg-7\">\r\n                                    <div class=\"text-center\">\r\n\r\n                                        <h4 class=\"mb-3\"><i\r\n                                                class=\"bx bxs-quote-alt-left text-primary h1 align-middle me-3\"></i><span\r\n                                                class=\"text-primary\">5k</span>+ Satisfied clients</h4>\r\n\r\n                                        <div dir=\"ltr\">\r\n                                            <owl-carousel-o class=\"owl-theme auth-review-carousel\"\r\n                                                [options]=\"carouselOption\">\r\n                                                <ng-template carouselSlide>\r\n                                                    <div class=\"item\">\r\n                                                        <div class=\"py-3\">\r\n                                                            <p class=\"font-size-16 mb-4\">\" Fantastic theme with a\r\n                                                                ton of\r\n                                                                options. If you just want the HTML to integrate with\r\n                                                                your project, then this is the package. You can find\r\n                                                                the\r\n                                                                files in the 'dist' folder...no need to install git\r\n                                                                and\r\n                                                                all the other stuff the documentation talks about. \"\r\n                                                            </p>\r\n\r\n                                                            <div>\r\n                                                                <h4 class=\"font-size-16 text-primary\">Abs1981</h4>\r\n                                                                <p class=\"font-size-14 mb-0\">- Skote User</p>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                </ng-template>\r\n                                                <ng-template carouselSlide>\r\n                                                    <div class=\"item\">\r\n                                                        <div class=\"py-3\">\r\n                                                            <p class=\"font-size-16 mb-4\">\" If Every Vendor on Envato\r\n                                                                are\r\n                                                                as supportive as Themesbrand, Development with be a\r\n                                                                nice\r\n                                                                experience. You guys are Wonderful. Keep us the good\r\n                                                                work. \"</p>\r\n\r\n                                                            <div>\r\n                                                                <h4 class=\"font-size-16 text-primary\">nezerious</h4>\r\n                                                                <p class=\"font-size-14 mb-0\">- Skote User</p>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                </ng-template>\r\n                                            </owl-carousel-o>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- end col -->\r\n\r\n        <div class=\"col-xl-3\">\r\n            <div class=\"auth-full-page-content p-md-5 p-4\">\r\n                <div class=\"w-100\">\r\n\r\n                    <div class=\"d-flex flex-column h-100\">\r\n                        <div class=\"mb-4 mb-md-5\">\r\n                            <a routerLink=\"/\" class=\"d-block auth-logo\">\r\n                                <img src=\"assets/images/logo-dark.png\" alt=\"\" height=\"18\" class=\"auth-logo-dark\">\r\n                                <img src=\"assets/images/logo-light.png\" alt=\"\" height=\"18\" class=\"auth-logo-light\">\r\n                            </a>\r\n                        </div>\r\n                        <div class=\"my-auto\">\r\n                            <div>\r\n                                <h5 class=\"text-primary\">Register account</h5>\r\n                                <p class=\"text-muted\">Get your free Skote account now.</p>\r\n                            </div>\r\n                            <div class=\"mt-4\">\r\n                                <form [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\r\n                                    <ngb-alert type=\"success\" *ngIf=\"successmsg\" [dismissible]=\"false\">Registeration\r\n                                        successfull.\r\n                                    </ngb-alert>\r\n\r\n                                    <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\r\n\r\n                                    <div class=\"mb-3\">\r\n                                        <label for=\"username\">Username</label>\r\n                                        <input type=\"text\" formControlName=\"username\" class=\"form-control\" id=\"username\"\r\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\"\r\n                                            placeholder=\"Enter username\">\r\n                                        <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                                            <div *ngIf=\"f.username.errors.required\">Userame is required</div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"mb-3\">\r\n                                        <label for=\"useremail\">Email</label>\r\n                                        <input type=\"email\" formControlName=\"email\"\r\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\r\n                                            class=\"form-control\" id=\"useremail\" placeholder=\"Enter email\">\r\n                                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                                            <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                                            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"mb-3\">\r\n                                        <label for=\"userpassword\">Password</label>\r\n                                        <input type=\"password\" formControlName=\"password\"\r\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\r\n                                            class=\"form-control\" id=\"userpassword\" placeholder=\"Enter password\">\r\n                                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                                            <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <p class=\"mb-0\">By registering you agree to the Skote <a\r\n                                                href=\"javascript: void(0);\" class=\"text-primary\">Terms of Use</a>\r\n                                        </p>\r\n                                    </div>\r\n\r\n                                    <div class=\"mt-4 d-grid\">\r\n                                        <button class=\"btn btn-primary btn-block\" type=\"submit\">Register</button>\r\n                                    </div>\r\n\r\n                                    <div class=\"mt-4 text-center\">\r\n                                        <h5 class=\"font-size-14 mb-3\">Sign up using</h5>\r\n                                        <ul class=\"list-inline\">\r\n                                            <li class=\"list-inline-item\">\r\n                                                <a href=\"javascript::void()\"\r\n                                                    class=\"social-list-item bg-primary text-white border-primary\">\r\n                                                    <i class=\"mdi mdi-facebook\"></i>\r\n                                                </a>\r\n                                            </li>\r\n                                            <li class=\"list-inline-item\">\r\n                                                <a href=\"javascript::void()\"\r\n                                                    class=\"social-list-item bg-info text-white border-info\">\r\n                                                    <i class=\"mdi mdi-twitter\"></i>\r\n                                                </a>\r\n                                            </li>\r\n                                            <li class=\"list-inline-item\">\r\n                                                <a href=\"javascript::void()\"\r\n                                                    class=\"social-list-item bg-danger text-white border-danger\">\r\n                                                    <i class=\"mdi mdi-google\"></i>\r\n                                                </a>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </form>\r\n\r\n                                <div class=\"mt-5 text-center\">\r\n                                    <p>Already have an account ? <a routerLink=\"/account/login-2\"\r\n                                            class=\"fw-medium text-primary\"> Login</a> </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"mt-4 mt-md-5 text-center\">\r\n                            <p class=\"mb-0\">© {{year}} Skote. Crafted with <i class=\"mdi mdi-heart text-danger\"></i>\r\n                                by Themesbrand</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- end col -->\r\n    </div>\r\n    <!-- end row -->\r\n</div>\r\n<!-- end container-fluid -->","import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../../../core/services/auth.service';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { first } from 'rxjs/operators';\r\nimport { UserProfileService } from '../../../core/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  signupForm: UntypedFormGroup;\r\n  submitted = false;\r\n  error = '';\r\n  successmsg = false;\r\n\r\n  // set the currenr year\r\n  year: number = new Date().getFullYear();\r\n\r\n  // tslint:disable-next-line: max-line-length\r\n  constructor(private formBuilder: UntypedFormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService,\r\n    private userService: UserProfileService) { }\r\n\r\n  ngOnInit() {\r\n    this.signupForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.signupForm.controls; }\r\n\r\n  /**\r\n   * On submit form\r\n   */\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.signupForm.invalid) {\r\n      return;\r\n    } else {\r\n      if (environment.defaultauth === 'firebase') {\r\n        this.authenticationService.register(this.f.email.value, this.f.password.value).then((res: any) => {\r\n          this.successmsg = true;\r\n          if (this.successmsg) {\r\n            this.router.navigate(['/dashboard']);\r\n          }\r\n        })\r\n          .catch(error => {\r\n            this.error = error ? error : '';\r\n          });\r\n      } else {\r\n        this.userService.register(this.signupForm.value)\r\n          .pipe(first())\r\n          .subscribe(\r\n            data => {\r\n              this.successmsg = true;\r\n              if (this.successmsg) {\r\n                this.router.navigate(['/account/login']);\r\n              }\r\n            },\r\n            error => {\r\n              this.error = error ? error : '';\r\n            });\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div class=\"account-pages my-5 pt-sm-5\">\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\r\n        <div class=\"card overflow-hidden\">\r\n          <div class=\"bg-soft bg-primary\">\r\n            <div class=\"row\">\r\n              <div class=\"col-7\">\r\n                <div class=\"text-primary p-4\">\r\n                  <h5 class=\"text-primary\">Free Register</h5>\r\n                  <p>Get your free Skote account now.</p>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-5 align-self-end\">\r\n                <img src=\"assets/images/profile-img.png\" alt=\"\" class=\"img-fluid\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-body pt-0\">\r\n            <div>\r\n              <a routerLink=\"/\">\r\n                <div class=\"avatar-md profile-user-wid mb-4\">\r\n                  <span class=\"avatar-title rounded-circle bg-light\">\r\n                    <img src=\"assets/images/logo.svg\" alt=\"\" class=\"rounded-circle\" height=\"34\">\r\n                  </span>\r\n                </div>\r\n              </a>\r\n            </div>\r\n            <div class=\"p-2\">\r\n\r\n              <form class=\"needs-validation\" name=\"signupForm\" [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\"\r\n                novalidate>\r\n\r\n                <ngb-alert type=\"success\" *ngIf=\"successmsg\" [dismissible]=\"false\">Registeration successfull.\r\n                </ngb-alert>\r\n\r\n                <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\r\n\r\n                <div class=\"mb-3\">\r\n                  <label for=\"username\" class=\"form-label\">Username</label>\r\n\r\n                  <input type=\"text\" formControlName=\"username\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" id=\"username\"\r\n                    placeholder=\"Enter username\" />\r\n\r\n                  <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.username.errors.required\">Userame is required</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"mb-3\">\r\n                  <label for=\"email\" class=\"form-label\">Email</label>\r\n\r\n                  <input type=\"email\" formControlName=\"email\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"email\" placeholder=\"Email\" />\r\n\r\n                  <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                    <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"mb-3\">\r\n                  <label for=\"password\" class=\"form-label\">Password</label>\r\n\r\n                  <input type=\"password\" formControlName=\"password\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" id=\"password\" placeholder=\"Password\" />\r\n\r\n                  <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"mt-4 d-grid\">\r\n                  <button class=\"btn btn-primary\" type=\"submit\">Register</button>\r\n                </div>\r\n                <div class=\"mt-4 text-center\">\r\n                  <h5 class=\"font-size-14 mb-3\">Sign in with</h5>\r\n\r\n                  <ul class=\"list-inline\">\r\n                    <li class=\"list-inline-item\">\r\n                      <a href=\"javascript::void()\" class=\"social-list-item bg-primary text-white border-primary\">\r\n                        <i class=\"mdi mdi-facebook\"></i>\r\n                      </a>\r\n                    </li>\r\n                    <li class=\"list-inline-item\">\r\n                      <a href=\"javascript::void()\" class=\"social-list-item bg-info text-white border-info\">\r\n                        <i class=\"mdi mdi-twitter\"></i>\r\n                      </a>\r\n                    </li>\r\n                    <li class=\"list-inline-item\">\r\n                      <a href=\"javascript::void()\" class=\"social-list-item bg-danger text-white border-danger\">\r\n                        <i class=\"mdi mdi-google\"></i>\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div class=\"mt-4 text-center\">\r\n                  <p class=\"mb-0\">By registering you agree to the Skote <a href=\"javascript: void(0);\"\r\n                      class=\"text-primary\">Terms of\r\n                      Use</a></p>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- end card -->\r\n\r\n        <div class=\"mt-5 text-center\">\r\n          <p>Already have an account ? <a routerLink=\"/account/login\" class=\"fw-medium text-primary\"> Login</a>\r\n          </p>\r\n          <p>© {{year}} Skote. Crafted with <i class=\"mdi mdi-heart text-danger\"></i> by Themesbrand</p>\r\n        </div>\r\n      </div> <!-- end col -->\r\n    </div>\r\n    <!-- end row -->\r\n  </div>\r\n  <!-- end container -->\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { User } from '../models/auth.models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserProfileService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll() {\r\n        return this.http.get<User[]>(`/api/login`);\r\n    }\r\n\r\n    register(user: User) {\r\n        return this.http.post(`/users/register`, user);\r\n    }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}